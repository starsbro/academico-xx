name: Deploy to Firebase (Local-First Approach)

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

# Note: This workflow assumes developers have already run local validation:
# - ./scripts/dev-check.sh (lint + build + quick tests)
# - npm run local:accessibility, npm run local:performance
# CI/CD serves as final safety net before deployment

permissions:
  checks: write
  contents: read
  pull-requests: write
  actions: read
  statuses: write

env:
  NODE_VERSION: "20"
  FIREBASE_PROJECT_ID: "academico-ai"

jobs:
  # Job 1: Final validation (safety net)
  validate:
    name: Final Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: |
            frontend/package-lock.json
            backend/functions/package-lock.json

      # Frontend Final Validation
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Final Frontend Lint Check
        working-directory: ./frontend
        run: npm run lint

      # Backend Final Validation
      - name: Install Backend Dependencies
        working-directory: ./backend/functions
        run: npm ci

      - name: Final Backend Lint Check
        working-directory: ./backend/functions
        run: npm run lint

      - name: Final Backend Build Check
        working-directory: ./backend/functions
        run: npm run build

  # Job 2: Build Frontend
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Create Environment File
        working-directory: ./frontend
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env.local
          echo "NEXT_PUBLIC_USE_FIREBASE_EMULATORS=false" >> .env.local
          echo "NEXT_PUBLIC_BACKEND_URL=https://api-bcsebzkoea-uc.a.run.app" >> .env.local

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      - name: Upload Frontend Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/out/
          retention-days: 1

  # Job 3: Deploy to Firebase (only on main branch)
  deploy:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    needs: [validate, build-frontend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Download Frontend Build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/out/

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Backend Dependencies
        working-directory: ./backend/functions
        run: npm ci

      - name: Create Frontend Environment File
        working-directory: ./frontend
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env.local
          echo "NEXT_PUBLIC_USE_FIREBASE_EMULATORS=false" >> .env.local
          echo "NEXT_PUBLIC_BACKEND_URL=https://api-bcsebzkoea-uc.a.run.app" >> .env.local

      - name: Build Frontend (for deployment)
        working-directory: ./frontend
        run: npm run build

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ACADEMICO_AI }}
          channelId: live
          projectId: ${{ env.FIREBASE_PROJECT_ID }}

  # Job 4: Preview Deploy (for PRs)
  preview:
    name: Preview Deploy
    runs-on: ubuntu-latest
    needs: [validate, build-frontend]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Download Frontend Build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/out/

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Create Frontend Environment File
        working-directory: ./frontend
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env.local
          echo "NEXT_PUBLIC_USE_FIREBASE_EMULATORS=false" >> .env.local
          echo "NEXT_PUBLIC_BACKEND_URL=https://api-bcsebzkoea-uc.a.run.app" >> .env.local

      - name: Build Frontend (for preview)
        working-directory: ./frontend
        run: npm run build

      - name: Deploy Preview to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ACADEMICO_AI }}
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
