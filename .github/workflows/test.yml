name: Test & Quality Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run ESLint
        working-directory: ./frontend
        run: npm run lint

      - name: Run Prettier check
        working-directory: ./frontend
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}"

      - name: Type check
        working-directory: ./frontend
        run: npx tsc --noEmit

      - name: Run tests
        working-directory: ./frontend
        run: npm run test:ci || echo "No tests configured yet"

      - name: Test build
        working-directory: ./frontend
        run: npm run build

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/functions/package-lock.json

      - name: Install dependencies
        working-directory: ./backend/functions
        run: npm ci

      - name: Run ESLint
        working-directory: ./backend/functions
        run: npm run lint

      - name: Type check and build
        working-directory: ./backend/functions
        run: npm run build

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Audit Frontend Dependencies
        working-directory: ./frontend
        run: |
          npm ci
          npm audit --audit-level=high

      - name: Audit Backend Dependencies
        working-directory: ./backend/functions
        run: |
          npm ci
          npm audit --audit-level=high
