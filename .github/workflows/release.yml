name: Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '20'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            backend/functions/package-lock.json

      # Build Frontend
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Create Frontend Environment File
        working-directory: ./frontend
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env.local

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      # Build Backend
      - name: Install Backend Dependencies
        working-directory: ./backend/functions
        run: npm ci

      - name: Build Backend
        working-directory: ./backend/functions
        run: npm run build

      # Deploy to Firebase
      - name: Deploy to Firebase Production
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ACADEMICO_AI }}
          channelId: live
          projectId: academico-ai

      # Create GitHub Release
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Changes in this Release
            - Auto-generated release from tag ${{ github.ref }}
            - Deployed to Firebase: https://academico-ai.web.app
            
            ## Deployment URLs
            - **Production**: https://academico-ai.web.app
            - **Firebase Console**: https://console.firebase.google.com/project/academico-ai
          draft: false
          prerelease: false
